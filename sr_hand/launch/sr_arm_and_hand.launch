<launch>
  <include file="$(find sr_description)/loaders/load_hand_model.launch" />
  <include file="$(find sr_description)/loaders/load_arm_model.launch" />

  <!--
      shadowarm
  -->
  <node pkg="sr_hand" name="shadowarm"
	type="shadowarm_virtual" >
    <remap from="robot_description" to="sa_description"/>
    <param name="shadowhand_prefix" type="string" value="sr_arm/" />
    <param name="gazebo_joint_states_prefix" type="string" value="gazebo/" />
    <param name="publish_frequency_diagnostics" type="double" value="1.0" />
    <param name="publish_frequency" type="double" value="20.0" />
  </node>
  
  <include file="$(find ros_ethercat_model)/launch/joint_state_publisher.launch"/>
  
  <!-- Robot state publisher: publishes tf information regarding the
       positions of the arm -->
  <node pkg="robot_state_publisher" type="state_publisher"
	name="robot_state_publisher_pos_arm">
    <remap from="robot_description" to="sa_description"/>
    <remap from="joint_states" to="/sr_arm/position/joint_states" />
    <param name="publish_frequency" type="double" value="10.0" />
    <param name="tf_prefix" type="string" value="sr_arm/position" />
  </node>

  <!-- Robot state publisher: publishes tf information regarding the
       targets of the arm -->
  <node pkg="robot_state_publisher" type="state_publisher"
	name="robot_state_publisher_target_arm">
    <remap from="robot_description" to="sa_description"/>
    <remap from="joint_states" to="sr_arm/target/joint_states" />
    <param name="publish_frequency" type="double" value="1.0" />
    <param name="tf_prefix" type="string" value="sr_arm/target" />
  </node>



  <!--
      shadowhand
  -->

  <node pkg="sr_hand" name="shadowhand"
	type="shadowhand_virtual" >
    <remap from="hand_description" to="sh_description"/>
    <param name="gazebo_joint_states_prefix" type="string" value="gazebo/" />
    <param name="shadowhand_prefix" type="string" value="srh/" />
    <param name="publish_frequency_diagnostics" type="double" value="1.0" />
    <param name="publish_frequency" type="double" value="20.0" />
  </node>

  <!-- Robot state publisher: publishes tf information regarding the
       position of the hand -->
  <node pkg="robot_state_publisher" type="state_publisher"
	name="srh_robot_state_publisher_pos">
    <remap from="robot_description" to="sh_description"/>
    <remap from="joint_states" to="srh/position/joint_states" />
    <param name="publish_frequency" type="double" value="10.0" />
    <param name="tf_prefix" type="string" value="srh/position" />
  </node>

  <!-- Robot state publisher: publishes tf information regarding the
       targets of the hand -->
  <node pkg="robot_state_publisher" type="state_publisher"
	name="srh_robot_state_publisher_target">
    <remap from="robot_description" to="sh_description"/>
    <remap from="joint_states" to="srh/target/joint_states" />
    <param name="publish_frequency" type="double" value="1.0" />
    <param name="tf_prefix" type="string" value="srh/target" />
  </node>


  <!--
      publishes fixed transform: to link the arm and the hand
      for both targets and positions + a fixed transform to a fixed
      point at 0 0 0, to remap the arm base for both positions and
      targets.
  -->
<!-- try to get rid of /fixed replace it by /world  -->
  <node pkg="tf" type="static_transform_publisher" name="fixed_frame_pos_pub_arm" args="0 0 0 0 0 0 /world /sr_arm/position/world 100" />
  <node pkg="tf" type="static_transform_publisher" name="fixed_frame_target_pub_arm" args="0 0 0 0 0 0 /world /sr_arm/target/world 100" />

  <node pkg="tf" type="static_transform_publisher" name="link_hand_arm_pos" args="0 0 0 2.3562 0 0 /sr_arm/position/shadowarm_handsupport /srh/position/forearm 100" />
  <node pkg="tf" type="static_transform_publisher" name="link_hand_arm_target" args="0 0 0 2.3562 0 0 /sr_arm/target/shadowarm_handsupport /srh/target/forearm 100" /> 

  <!-- Joint States positions merger to get one single vector for both arm and hand -->
  <node pkg="sr_utilities" type="ordered_position_joint_states_merger.py" name="ordered_position_joint_states_merger"/>
  <!-- Joint States targets merger to get one single vector for both arm and hand -->
  <node pkg="sr_utilities" type="ordered_target_joint_states_merger.py" name="ordered_target_joint_states_merger"/>

  <!-- Tactile merger to get one single vector for all tactiles (using ShadowPST msgs) -->
  <node pkg="sr_tactile_sensors" type="virtual_ShadowPST_publisher.py" name="Tactiles_merger"/>

  <!-- publish the kinect transforms if we're using SIMULATED environment -->
  <group if="$(optenv SIMULATED 0)">
    <include file="$(find sr_hand)/launch/advanced/static_transforms.launch"/>
  </group>


  <!--
      Diagnostic Aggregator
  -->
  <node pkg="diagnostic_aggregator" type="aggregator_node"
        name="sr_diagnostic_aggregator" >
    <rosparam command="load"
              file="$(find sr_hand)/shadowhand_analyzer.yaml" />
  </node>
</launch>


